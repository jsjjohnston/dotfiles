

Debug Started for v3.17.0
new Mode(n:1)
Trigger(add) Mode(n:1) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <CR>
BufNew(3)
LspAttach(3)
BufEnter(3)
  new Mode(n:3)
Trigger(add) Mode(n:3) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(3)
  Trigger(del) Mode(n:3) g [ \ ] z <C-W> g' ' " z= g` <Space>
new Mode(n:3)
Trigger(add) Mode(n:3) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <CR>
BufNew(4)
LspAttach(4)
BufEnter(4)
  new Mode(n:4)
BufReadPost(4)
Trigger(add) Mode(n:4) ' " z= g` g' <C-W> z <Space> g [ \ ]
new Mode(n:4)
on_key: <CR>
BufNew(5)
LspAttach(5)
BufReadPost(5)
BufEnter(5)
  new Mode(n:5)
Trigger(add) Mode(n:5) " ` ' g` g' z= <Space> g ] [ z <C-W> \
LspAttach(5)
  Trigger(del) Mode(n:5) \ <C-W> z [ " ` ' g` g' z= ] g <Space>
new Mode(n:5)
Trigger(add) Mode(n:5) " ` ' g` g' z= <Space> g ] [ <C-W> z \
BufNew(6)
on_key: <Down>
on_key: <Down>
on_key: <Down>
on_key: <Down>
LspDetach(1)
  Trigger(del) Mode(n:1) ' ] \ " [ z= g` g' <C-W> z <Space> g
LspDetach(3)
  Trigger(del) Mode(n:3) g [ \ ] ' g` z= " g' <C-W> z <Space>
LspDetach(4)
  Trigger(del) Mode(n:4) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Up>
on_key: <Up>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: <Right>
on_key: c
ModeChanged(n:no)
  new Mode(o:5)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:5)
    continue:  Mode(o:5)
    getchar
    Trigger(add) Mode(o:5) ] g [
    on_key: w
    got: w
    suspend: Mode(o:5)
    Trigger(del) Mode(o:5) ] g [
    feedkeys: Mode(o:5) w
on_key: w
ModeChanged(no:i)
  new Mode(i:5)
  Safe(true)
Trigger(add) Mode(o:5) ] g [
Trigger(add) Mode(i:5) <C-R>
on_key: f
BufNew(8)
on_key: a
on_key: l
on_key: s
on_key: e
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  new Mode(c:5)
  Safe(true)
BufNew(9)
BufNew(10)
Trigger(add) Mode(c:5) <C-R>
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:5)
  Trigger(del) Mode(n:5) \ <C-W> z [ " ` ' g` g' z= ] g <Space>
Trigger(add) Mode(n:5) " ` ' g` g' z= <Space> g ] [ <C-W> z \
on_key: \
State(start): Mode(n:0) Node(\) { keys = "\\" }
  update Mode(n:5)
  continue: \ Mode(n:5)
  getchar
  on_key: \
  got: \
  suspend: Mode(n:5)
  Trigger(del) Mode(n:5) \ <C-W> z [ " ` ' g` g' z= ] g <Space>
  feedkeys: Mode(n:5) \\
on_key: \\
BufNew(11)
LspAttach(11)
BufEnter(11)
  new Mode(n:11)
Trigger(add) Mode(n:11) ' " z= g` g' <C-W> z <Space> g [ \ ]
Trigger(add) Mode(n:5) " ` ' g` g' z= <Space> g ] [ <C-W> z \
BufReadPost(11)
  Trigger(del) Mode(n:11) [ \ ] ' " z= g` g' <C-W> z <Space> g
new Mode(n:11)
Trigger(add) Mode(n:11) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: \
State(start): Mode(n:0) Node(\) { keys = "\\" }
  update Mode(n:11)
  continue: \ Mode(n:11)
  getchar
  on_key: -
  got: -
  suspend: Mode(n:11)
  Trigger(del) Mode(n:11) [ \ ] ' " z= g` g' <C-W> z <Space> g
  feedkeys: Mode(n:11) \-
on_key: \
on_key: -
BufNew(13)
LspAttach(13)
BufEnter(13)
  new Mode(n:13)
Trigger(add) Mode(n:11) ' " z= g` g' <C-W> z <Space> g [ \ ]
Trigger(add) Mode(n:13) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(13)
  Trigger(del) Mode(n:13) [ z= " ' g` g' <C-W> z <Space> g \ ]
new Mode(n:13)
Trigger(add) Mode(n:13) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Down>
on_key: <CR>
BufNew(14)
LspAttach(14)
BufEnter(14)
  new Mode(n:14)
Trigger(add) Mode(n:14) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(14)
  Trigger(del) Mode(n:14) <C-W> ' " z= g` g' z <Space> g [ \ ]
new Mode(n:14)
Trigger(add) Mode(n:14) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <CR>
BufNew(15)
LspAttach(15)
LspAttach(15)
BufReadPost(15)
BufEnter(15)
  new Mode(n:15)
Trigger(add) Mode(n:15) " ` ' g` g' z= <Space> g ] [ <C-W> z \
LspDetach(11)
  Trigger(del) Mode(n:11) " z= g` g' <C-W> z <Space> g [ \ ] '
LspDetach(13)
  Trigger(del) Mode(n:13) ' " z= g` g' <C-W> z <Space> g \ ] [
LspDetach(14)
  Trigger(del) Mode(n:14) " z= g` g' z <Space> g [ \ ] <C-W> '
on_key: :
ModeChanged(n:c)
  new Mode(c:15)
  Safe(true)
BufNew(16)
BufNew(17)
Trigger(add) Mode(c:15) <C-R>
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) <Space> g ] [ \ z <C-W> z= g' g` ' ` "
Trigger(add) Mode(n:15) " ` ' g` g' z= <Space> g ] [ <C-W> z \
on_key: [
State(start): Mode(n:0) Node([) { keys = "[" }
  update Mode(n:15)
  continue: [ Mode(n:15)
  getchar
  on_key: <Esc>
  got: <Esc>
on_key: \
State(start): Mode(n:0) Node(\) { keys = "\\" }
  update Mode(n:15)
  continue: \ Mode(n:15)
  getchar
  on_key: \
  got: \
  suspend: Mode(n:15)
  Trigger(del) Mode(n:15) <Space> g ] [ \ z <C-W> z= g' g` ' ` "
  feedkeys: Mode(n:15) \\
on_key: \\
BufNew(20)
LspAttach(20)
BufEnter(20)
  new Mode(n:20)
Trigger(add) Mode(n:15) " ` ' g` g' z= <Space> g ] [ <C-W> z \
Trigger(add) Mode(n:20) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(20)
  Trigger(del) Mode(n:20) ' " z= g` g' <C-W> z ] \ [ g <Space>
new Mode(n:20)
Trigger(add) Mode(n:20) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: -
BufNew(21)
LspAttach(21)
BufEnter(21)
  new Mode(n:21)
Trigger(add) Mode(n:21) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(21)
  Trigger(del) Mode(n:21) ' " z= <Space> g [ \ ] z <C-W> g' g`
new Mode(n:21)
Trigger(add) Mode(n:21) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Down>
on_key: <CR>
BufNew(22)
LspAttach(22)
BufEnter(22)
  new Mode(n:22)
Trigger(add) Mode(n:22) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(22)
  Trigger(del) Mode(n:22) g' <C-W> z <Space> g [ \ ] g` z= " '
new Mode(n:22)
Trigger(add) Mode(n:22) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <CR>
BufNew(23)
LspAttach(23)
LspAttach(23)
BufReadPost(23)
BufEnter(23)
  new Mode(n:23)
Trigger(add) Mode(n:23) " ` ' g` g' z= <Space> g ] [ <C-W> z \
LspDetach(22)
  Trigger(del) Mode(n:22) g' <C-W> z <Space> g [ \ ] g` z= " '
LspDetach(21)
  Trigger(del) Mode(n:21) ' z= <Space> g [ " \ ] z <C-W> g' g`
LspDetach(20)
  Trigger(del) Mode(n:20) ' " z= g` g' <C-W> z ] \ [ g <Space>
on_key: \
State(start): Mode(n:0) Node(\) { keys = "\\" }
  update Mode(n:23)
  continue: \ Mode(n:23)
  getchar
  on_key: \
  got: \
  suspend: Mode(n:23)
  Trigger(del) Mode(n:23) " ` ' g` g' z= <Space> g ] [ <C-W> z \
  feedkeys: Mode(n:23) \\
on_key: \\
BufNew(25)
LspAttach(25)
BufEnter(25)
  new Mode(n:25)
Trigger(add) Mode(n:23) " ` ' g` g' z= <Space> g ] [ <C-W> z \
Trigger(add) Mode(n:25) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(25)
  Trigger(del) Mode(n:25) ' " z= g` g' <C-W> z <Space> g \ ] [
new Mode(n:25)
Trigger(add) Mode(n:25) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: -
BufNew(26)
LspAttach(26)
BufEnter(26)
  new Mode(n:26)
Trigger(add) Mode(n:26) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(26)
  Trigger(del) Mode(n:26) ' " z= g` g' <C-W> z <Space> g [ \ ]
new Mode(n:26)
Trigger(add) Mode(n:26) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Down>
on_key: <CR>
BufNew(27)
LspAttach(27)
BufEnter(27)
  new Mode(n:27)
Trigger(add) Mode(n:27) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(27)
  Trigger(del) Mode(n:27) <Space> g [ \ ] z <C-W> g' g` z= " '
new Mode(n:27)
Trigger(add) Mode(n:27) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: -
BufEnter(26)
on_key: <Down>
on_key: <CR>
BufNew(28)
LspAttach(28)
BufEnter(28)
  new Mode(n:28)
Trigger(add) Mode(n:28) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(28)
  Trigger(del) Mode(n:28) ' " z= g` g' <C-W> z <Space> g [ \ ]
new Mode(n:28)
Trigger(add) Mode(n:28) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <CR>
BufNew(29)
LspAttach(29)
LspAttach(29)
BufReadPost(29)
BufEnter(29)
  new Mode(n:29)
Trigger(add) Mode(n:29) " ` ' g` g' z= <Space> g ] [ <C-W> z \
on_key: -
LspDetach(28)
  Trigger(del) Mode(n:28) ' " z= g` g' <C-W> z <Space> g [ \ ]
LspDetach(26)
  Trigger(del) Mode(n:26) ' " z= g` g' <C-W> z <Space> g [ \ ]
LspDetach(25)
  Trigger(del) Mode(n:25) ' " z= g` g' <Space> g \ ] z [ <C-W>
LspDetach(27)
  Trigger(del) Mode(n:27) <Space> g [ \ ] z <C-W> g' g` z= " '
on_key: \
State(start): Mode(n:0) Node(\) { keys = "\\" }
  update Mode(n:29)
  continue: \ Mode(n:29)
  getchar
  on_key: \
  got: \
  suspend: Mode(n:29)
  Trigger(del) Mode(n:29) z= <Space> g " ` ' g` g' ] [ <C-W> z \
  feedkeys: Mode(n:29) \\
on_key: \\
BufNew(31)
LspAttach(31)
BufEnter(31)
  new Mode(n:31)
Trigger(add) Mode(n:31) ' " z= g` g' <C-W> z <Space> g [ \ ]
Trigger(add) Mode(n:29) " ` ' g` g' z= <Space> g ] [ <C-W> z \
BufReadPost(31)
  Trigger(del) Mode(n:31) ' " z= g` g' <C-W> ] \ [ g <Space> z
new Mode(n:31)
Trigger(add) Mode(n:31) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: -
BufNew(32)
LspAttach(32)
BufEnter(32)
  new Mode(n:32)
Trigger(add) Mode(n:32) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(32)
  Trigger(del) Mode(n:32) g` g' <C-W> z <Space> g [ \ ] ' " z=
new Mode(n:32)
Trigger(add) Mode(n:32) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Down>
on_key: <CR>
BufNew(33)
LspAttach(33)
BufEnter(33)
  new Mode(n:33)
Trigger(add) Mode(n:33) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(33)
  Trigger(del) Mode(n:33) ] \ [ g <Space> z <C-W> g' g` z= " '
new Mode(n:33)
Trigger(add) Mode(n:33) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <Down>
on_key: <CR>
BufNew(34)
LspAttach(34)
BufEnter(34)
  new Mode(n:34)
Trigger(add) Mode(n:34) ' " z= g` g' <C-W> z <Space> g [ \ ]
BufReadPost(34)
  Trigger(del) Mode(n:34) ] \ [ g <Space> z <C-W> g' g` z= " '
new Mode(n:34)
Trigger(add) Mode(n:34) ' " z= g` g' <C-W> z <Space> g [ \ ]
on_key: <CR>
BufNew(35)
LspAttach(35)
LspAttach(35)
BufReadPost(35)
BufEnter(35)
  new Mode(n:35)
Trigger(add) Mode(n:35) " ` ' g` g' z= <Space> g ] [ <C-W> z \
LspDetach(33)
  Trigger(del) Mode(n:33) ] \ [ g <Space> z <C-W> g' g` z= " '
LspDetach(32)
  Trigger(del) Mode(n:32) g` g' <C-W> z <Space> g [ \ ] z= " '
LspDetach(31)
  Trigger(del) Mode(n:31) ' " z= g` g' <C-W> ] \ [ g <Space> z
LspDetach(34)
  Trigger(del) Mode(n:34) ] \ [ g <Space> z <C-W> g' g` z= " '
LspDetach(5)
  Trigger(del) Mode(n:5) " ` ' g` g' z= <Space> g ] [ z <C-W> \
  Trigger(del) Mode(o:5) [ g ]
  Trigger(del) Mode(i:5) <C-R>
  Trigger(del) Mode(c:5) <C-R>
LspDetach(29)
  Trigger(del) Mode(n:29) " ` ' g` g' z= <Space> g ] [ <C-W> z \
LspDetach(23)
  Trigger(del) Mode(n:23) " ` ' g` g' z= <Space> g ] [ <C-W> z \
LspDetach(35)
  Trigger(del) Mode(n:35) \ " ` ' g` g' z= <Space> g ] [ <C-W> z
LspDetach(15)
  Trigger(del) Mode(n:15) [ <C-W> " ` ' g` g' z= <Space> g ] z \
  Trigger(del) Mode(c:15) <C-R>
new Mode(n:35)
Trigger(add) Mode(n:35) " ` ' g` g' z= <Space> g ] [ <C-W> z \
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:2)
  continue: <Space> Mode(n:2)
  getchar
  on_key: f
  got: f
  continue: <Space>f Mode(n:2)
  getchar
  on_key: f
  got: f
  suspend: Mode(n:2)
  Trigger(del) Mode(n:2) g` [ z <Space> g \ g' ' " ] ` z= <C-W>
  feedkeys: Mode(n:2) <Space>ff
on_key: <Space>ff
BufNew(45)
BufNew(46)
BufNew(47)
BufNew(48)
BufNew(49)
BufNew(50)
BufEnter(49)
  new Mode(n:49)
ModeChanged(n:i)
  new Mode(i:49)
  Safe(true)
Trigger(add) Mode(i:49) <C-R>
Trigger(add) Mode(n:2) ' ` " g` g' z= <C-W> ] [ g <Space> z \
Trigger(add) Mode(n:49) ' " ` z= g` g' <C-W> ] [ z <Space> g \
BufNew(51)
on_key: w
BufNew(52)
on_key: h
on_key: i
BufNew(53)
on_key: <CR>
BufEnter(2)
LspAttach(27)
LspAttach(27)
BufReadPost(27)
BufEnter(27)
  new Mode(i:27)
ModeChanged(i:n)
  new Mode(n:27)
  Safe(true)
Trigger(add) Mode(n:27) ' ` " g` g' z= <C-W> ] [ g <Space> z \
Trigger(add) Mode(i:27) <C-R>
on_key: <C-D>
on_key: <C-D>
on_key: <C-D>
on_key: <C-D>
on_key: <Esc>
LspDetach(2)
  Trigger(del) Mode(n:2) g` [ z <Space> g \ g' ' " ] ` z= <C-W>
  Trigger(del) Mode(x:2) <C-W> g ] z " [ <Space>
  Trigger(del) Mode(i:2) <C-R>
  Trigger(del) Mode(o:2) g ] [
  Trigger(del) Mode(c:2) <C-R>
LspDetach(17)
  Trigger(del) Mode(n:17) \ z <Space> ' ` " g` g' z= <C-W> ] [ g
  Trigger(del) Mode(c:17) <C-R>
  Trigger(del) Mode(o:17) g ] [
  Trigger(del) Mode(i:17) <C-R>
LspDetach(27)
  Trigger(del) Mode(n:27) ' ` " g` g' z= <C-W> ] [ g <Space> z \
  Trigger(del) Mode(i:27) <C-R>
new Mode(n:27)
